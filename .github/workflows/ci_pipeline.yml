name: CI Pipeline

on:
    pull_request:
        branches: [master]

env:
    CARGO_TERM_COLOR: always

jobs:
    test:
        runs-on: ubuntu-latest
        services:
            postgres:
                image: postgres
                env:
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_USER: postgres
                ports:
                    - 5432:5432
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
        env:
            POSTGRES_HOST: postgres
            POSTGRES_PORT: 5432
            POSTGRES_PASSWORD: postgres
            POSTGRES_USER: postgres
            USER_DATABASE_URL: postgresql://postgres:postgres@localhost:5432

        steps:
            - uses: actions/checkout@v2
            - name: Build
              run: cargo build --verbose
            - name: Run tests
              run: cargo test --verbose

    docker:
        timeout-minutes: 15
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v1

            - name: Start containers
              run: docker-compose -f "docker-compose.yml" up -d --build

            - name: Run API Tests
              id: run-newman
              uses: anthonyvscode/newman-action@v1
              with:
                  collection: Capstone.postman_collection.json
                  reporters: cli

            - name: Output summary to console
              run: echo ${{ steps.run-newman.outputs.summary }}

            - name: Stop containers
              if: always()
              run: docker-compose -f "docker-compose.yml" down
